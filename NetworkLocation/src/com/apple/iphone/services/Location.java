// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/apple_loc.proto

package com.apple.iphone.services;

public final class Location {
  private Location() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .ResponseWLAN wlan = 2;
    java.util.List<com.apple.iphone.services.Location.ResponseWLAN> 
        getWlanList();
    com.apple.iphone.services.Location.ResponseWLAN getWlan(int index);
    int getWlanCount();
  }
  public static final class Response extends
      com.google.protobuf.GeneratedMessageLite
      implements ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(Builder builder) {
      super(builder);
    }
    private Response(boolean noInit) {}
    
    private static final Response defaultInstance;
    public static Response getDefaultInstance() {
      return defaultInstance;
    }
    
    public Response getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .ResponseWLAN wlan = 2;
    public static final int WLAN_FIELD_NUMBER = 2;
    private java.util.List<com.apple.iphone.services.Location.ResponseWLAN> wlan_;
    public java.util.List<com.apple.iphone.services.Location.ResponseWLAN> getWlanList() {
      return wlan_;
    }
    public java.util.List<? extends com.apple.iphone.services.Location.ResponseWLANOrBuilder> 
        getWlanOrBuilderList() {
      return wlan_;
    }
    public int getWlanCount() {
      return wlan_.size();
    }
    public com.apple.iphone.services.Location.ResponseWLAN getWlan(int index) {
      return wlan_.get(index);
    }
    public com.apple.iphone.services.Location.ResponseWLANOrBuilder getWlanOrBuilder(
        int index) {
      return wlan_.get(index);
    }
    
    private void initFields() {
      wlan_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < wlan_.size(); i++) {
        output.writeMessage(2, wlan_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < wlan_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, wlan_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.apple.iphone.services.Location.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.apple.iphone.services.Location.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.apple.iphone.services.Location.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.apple.iphone.services.Location.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.apple.iphone.services.Location.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.apple.iphone.services.Location.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.apple.iphone.services.Location.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.apple.iphone.services.Location.Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.apple.iphone.services.Location.Response, Builder>
        implements com.apple.iphone.services.Location.ResponseOrBuilder {
      // Construct using com.apple.iphone.services.Location.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        wlan_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.apple.iphone.services.Location.Response getDefaultInstanceForType() {
        return com.apple.iphone.services.Location.Response.getDefaultInstance();
      }
      
      public com.apple.iphone.services.Location.Response build() {
        com.apple.iphone.services.Location.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.apple.iphone.services.Location.Response buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.apple.iphone.services.Location.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.apple.iphone.services.Location.Response buildPartial() {
        com.apple.iphone.services.Location.Response result = new com.apple.iphone.services.Location.Response(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          wlan_ = java.util.Collections.unmodifiableList(wlan_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.wlan_ = wlan_;
        return result;
      }
      
      public Builder mergeFrom(com.apple.iphone.services.Location.Response other) {
        if (other == com.apple.iphone.services.Location.Response.getDefaultInstance()) return this;
        if (!other.wlan_.isEmpty()) {
          if (wlan_.isEmpty()) {
            wlan_ = other.wlan_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureWlanIsMutable();
            wlan_.addAll(other.wlan_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 18: {
              com.apple.iphone.services.Location.ResponseWLAN.Builder subBuilder = com.apple.iphone.services.Location.ResponseWLAN.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addWlan(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .ResponseWLAN wlan = 2;
      private java.util.List<com.apple.iphone.services.Location.ResponseWLAN> wlan_ =
        java.util.Collections.emptyList();
      private void ensureWlanIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          wlan_ = new java.util.ArrayList<com.apple.iphone.services.Location.ResponseWLAN>(wlan_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<com.apple.iphone.services.Location.ResponseWLAN> getWlanList() {
        return java.util.Collections.unmodifiableList(wlan_);
      }
      public int getWlanCount() {
        return wlan_.size();
      }
      public com.apple.iphone.services.Location.ResponseWLAN getWlan(int index) {
        return wlan_.get(index);
      }
      public Builder setWlan(
          int index, com.apple.iphone.services.Location.ResponseWLAN value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWlanIsMutable();
        wlan_.set(index, value);
        
        return this;
      }
      public Builder setWlan(
          int index, com.apple.iphone.services.Location.ResponseWLAN.Builder builderForValue) {
        ensureWlanIsMutable();
        wlan_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addWlan(com.apple.iphone.services.Location.ResponseWLAN value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWlanIsMutable();
        wlan_.add(value);
        
        return this;
      }
      public Builder addWlan(
          int index, com.apple.iphone.services.Location.ResponseWLAN value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWlanIsMutable();
        wlan_.add(index, value);
        
        return this;
      }
      public Builder addWlan(
          com.apple.iphone.services.Location.ResponseWLAN.Builder builderForValue) {
        ensureWlanIsMutable();
        wlan_.add(builderForValue.build());
        
        return this;
      }
      public Builder addWlan(
          int index, com.apple.iphone.services.Location.ResponseWLAN.Builder builderForValue) {
        ensureWlanIsMutable();
        wlan_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllWlan(
          java.lang.Iterable<? extends com.apple.iphone.services.Location.ResponseWLAN> values) {
        ensureWlanIsMutable();
        super.addAll(values, wlan_);
        
        return this;
      }
      public Builder clearWlan() {
        wlan_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeWlan(int index) {
        ensureWlanIsMutable();
        wlan_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Response)
    }
    
    static {
      defaultInstance = new Response(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Response)
  }
  
  public interface WLANLocationOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional int64 latitude = 1;
    boolean hasLatitude();
    long getLatitude();
    
    // optional int64 longitude = 2;
    boolean hasLongitude();
    long getLongitude();
    
    // optional int32 accuracy = 3;
    boolean hasAccuracy();
    int getAccuracy();
    
    // optional int32 zeroField4 = 4;
    boolean hasZeroField4();
    int getZeroField4();
    
    // optional int32 altitude = 5;
    boolean hasAltitude();
    int getAltitude();
    
    // optional int32 altitudeAccuracy = 6;
    boolean hasAltitudeAccuracy();
    int getAltitudeAccuracy();
    
    // optional int32 unknown11 = 11;
    boolean hasUnknown11();
    int getUnknown11();
    
    // optional int32 unknown12 = 12;
    boolean hasUnknown12();
    int getUnknown12();
  }
  public static final class WLANLocation extends
      com.google.protobuf.GeneratedMessageLite
      implements WLANLocationOrBuilder {
    // Use WLANLocation.newBuilder() to construct.
    private WLANLocation(Builder builder) {
      super(builder);
    }
    private WLANLocation(boolean noInit) {}
    
    private static final WLANLocation defaultInstance;
    public static WLANLocation getDefaultInstance() {
      return defaultInstance;
    }
    
    public WLANLocation getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional int64 latitude = 1;
    public static final int LATITUDE_FIELD_NUMBER = 1;
    private long latitude_;
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getLatitude() {
      return latitude_;
    }
    
    // optional int64 longitude = 2;
    public static final int LONGITUDE_FIELD_NUMBER = 2;
    private long longitude_;
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getLongitude() {
      return longitude_;
    }
    
    // optional int32 accuracy = 3;
    public static final int ACCURACY_FIELD_NUMBER = 3;
    private int accuracy_;
    public boolean hasAccuracy() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getAccuracy() {
      return accuracy_;
    }
    
    // optional int32 zeroField4 = 4;
    public static final int ZEROFIELD4_FIELD_NUMBER = 4;
    private int zeroField4_;
    public boolean hasZeroField4() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getZeroField4() {
      return zeroField4_;
    }
    
    // optional int32 altitude = 5;
    public static final int ALTITUDE_FIELD_NUMBER = 5;
    private int altitude_;
    public boolean hasAltitude() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getAltitude() {
      return altitude_;
    }
    
    // optional int32 altitudeAccuracy = 6;
    public static final int ALTITUDEACCURACY_FIELD_NUMBER = 6;
    private int altitudeAccuracy_;
    public boolean hasAltitudeAccuracy() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getAltitudeAccuracy() {
      return altitudeAccuracy_;
    }
    
    // optional int32 unknown11 = 11;
    public static final int UNKNOWN11_FIELD_NUMBER = 11;
    private int unknown11_;
    public boolean hasUnknown11() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getUnknown11() {
      return unknown11_;
    }
    
    // optional int32 unknown12 = 12;
    public static final int UNKNOWN12_FIELD_NUMBER = 12;
    private int unknown12_;
    public boolean hasUnknown12() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getUnknown12() {
      return unknown12_;
    }
    
    private void initFields() {
      latitude_ = 0L;
      longitude_ = 0L;
      accuracy_ = 0;
      zeroField4_ = 0;
      altitude_ = 0;
      altitudeAccuracy_ = 0;
      unknown11_ = 0;
      unknown12_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, latitude_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, longitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, accuracy_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, zeroField4_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, altitude_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, altitudeAccuracy_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(11, unknown11_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(12, unknown12_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, latitude_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, longitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, accuracy_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, zeroField4_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, altitude_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, altitudeAccuracy_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, unknown11_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, unknown12_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.apple.iphone.services.Location.WLANLocation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.apple.iphone.services.Location.WLANLocation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.WLANLocation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.apple.iphone.services.Location.WLANLocation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.WLANLocation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.apple.iphone.services.Location.WLANLocation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.WLANLocation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.apple.iphone.services.Location.WLANLocation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.apple.iphone.services.Location.WLANLocation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.apple.iphone.services.Location.WLANLocation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.apple.iphone.services.Location.WLANLocation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.apple.iphone.services.Location.WLANLocation, Builder>
        implements com.apple.iphone.services.Location.WLANLocationOrBuilder {
      // Construct using com.apple.iphone.services.Location.WLANLocation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        latitude_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        longitude_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        accuracy_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        zeroField4_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        altitude_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        altitudeAccuracy_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        unknown11_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        unknown12_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.apple.iphone.services.Location.WLANLocation getDefaultInstanceForType() {
        return com.apple.iphone.services.Location.WLANLocation.getDefaultInstance();
      }
      
      public com.apple.iphone.services.Location.WLANLocation build() {
        com.apple.iphone.services.Location.WLANLocation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.apple.iphone.services.Location.WLANLocation buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.apple.iphone.services.Location.WLANLocation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.apple.iphone.services.Location.WLANLocation buildPartial() {
        com.apple.iphone.services.Location.WLANLocation result = new com.apple.iphone.services.Location.WLANLocation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.accuracy_ = accuracy_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.zeroField4_ = zeroField4_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.altitude_ = altitude_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.altitudeAccuracy_ = altitudeAccuracy_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.unknown11_ = unknown11_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.unknown12_ = unknown12_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(com.apple.iphone.services.Location.WLANLocation other) {
        if (other == com.apple.iphone.services.Location.WLANLocation.getDefaultInstance()) return this;
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasAccuracy()) {
          setAccuracy(other.getAccuracy());
        }
        if (other.hasZeroField4()) {
          setZeroField4(other.getZeroField4());
        }
        if (other.hasAltitude()) {
          setAltitude(other.getAltitude());
        }
        if (other.hasAltitudeAccuracy()) {
          setAltitudeAccuracy(other.getAltitudeAccuracy());
        }
        if (other.hasUnknown11()) {
          setUnknown11(other.getUnknown11());
        }
        if (other.hasUnknown12()) {
          setUnknown12(other.getUnknown12());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              latitude_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              longitude_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              accuracy_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              zeroField4_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              altitude_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              altitudeAccuracy_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000040;
              unknown11_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000080;
              unknown12_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 latitude = 1;
      private long latitude_ ;
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getLatitude() {
        return latitude_;
      }
      public Builder setLatitude(long value) {
        bitField0_ |= 0x00000001;
        latitude_ = value;
        
        return this;
      }
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000001);
        latitude_ = 0L;
        
        return this;
      }
      
      // optional int64 longitude = 2;
      private long longitude_ ;
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getLongitude() {
        return longitude_;
      }
      public Builder setLongitude(long value) {
        bitField0_ |= 0x00000002;
        longitude_ = value;
        
        return this;
      }
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000002);
        longitude_ = 0L;
        
        return this;
      }
      
      // optional int32 accuracy = 3;
      private int accuracy_ ;
      public boolean hasAccuracy() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getAccuracy() {
        return accuracy_;
      }
      public Builder setAccuracy(int value) {
        bitField0_ |= 0x00000004;
        accuracy_ = value;
        
        return this;
      }
      public Builder clearAccuracy() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accuracy_ = 0;
        
        return this;
      }
      
      // optional int32 zeroField4 = 4;
      private int zeroField4_ ;
      public boolean hasZeroField4() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getZeroField4() {
        return zeroField4_;
      }
      public Builder setZeroField4(int value) {
        bitField0_ |= 0x00000008;
        zeroField4_ = value;
        
        return this;
      }
      public Builder clearZeroField4() {
        bitField0_ = (bitField0_ & ~0x00000008);
        zeroField4_ = 0;
        
        return this;
      }
      
      // optional int32 altitude = 5;
      private int altitude_ ;
      public boolean hasAltitude() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getAltitude() {
        return altitude_;
      }
      public Builder setAltitude(int value) {
        bitField0_ |= 0x00000010;
        altitude_ = value;
        
        return this;
      }
      public Builder clearAltitude() {
        bitField0_ = (bitField0_ & ~0x00000010);
        altitude_ = 0;
        
        return this;
      }
      
      // optional int32 altitudeAccuracy = 6;
      private int altitudeAccuracy_ ;
      public boolean hasAltitudeAccuracy() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getAltitudeAccuracy() {
        return altitudeAccuracy_;
      }
      public Builder setAltitudeAccuracy(int value) {
        bitField0_ |= 0x00000020;
        altitudeAccuracy_ = value;
        
        return this;
      }
      public Builder clearAltitudeAccuracy() {
        bitField0_ = (bitField0_ & ~0x00000020);
        altitudeAccuracy_ = 0;
        
        return this;
      }
      
      // optional int32 unknown11 = 11;
      private int unknown11_ ;
      public boolean hasUnknown11() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getUnknown11() {
        return unknown11_;
      }
      public Builder setUnknown11(int value) {
        bitField0_ |= 0x00000040;
        unknown11_ = value;
        
        return this;
      }
      public Builder clearUnknown11() {
        bitField0_ = (bitField0_ & ~0x00000040);
        unknown11_ = 0;
        
        return this;
      }
      
      // optional int32 unknown12 = 12;
      private int unknown12_ ;
      public boolean hasUnknown12() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getUnknown12() {
        return unknown12_;
      }
      public Builder setUnknown12(int value) {
        bitField0_ |= 0x00000080;
        unknown12_ = value;
        
        return this;
      }
      public Builder clearUnknown12() {
        bitField0_ = (bitField0_ & ~0x00000080);
        unknown12_ = 0;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:WLANLocation)
    }
    
    static {
      defaultInstance = new WLANLocation(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:WLANLocation)
  }
  
  public interface ResponseWLANOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional string mac = 1;
    boolean hasMac();
    String getMac();
    
    // optional .WLANLocation location = 2;
    boolean hasLocation();
    com.apple.iphone.services.Location.WLANLocation getLocation();
    
    // optional int32 channel = 21;
    boolean hasChannel();
    int getChannel();
  }
  public static final class ResponseWLAN extends
      com.google.protobuf.GeneratedMessageLite
      implements ResponseWLANOrBuilder {
    // Use ResponseWLAN.newBuilder() to construct.
    private ResponseWLAN(Builder builder) {
      super(builder);
    }
    private ResponseWLAN(boolean noInit) {}
    
    private static final ResponseWLAN defaultInstance;
    public static ResponseWLAN getDefaultInstance() {
      return defaultInstance;
    }
    
    public ResponseWLAN getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional string mac = 1;
    public static final int MAC_FIELD_NUMBER = 1;
    private java.lang.Object mac_;
    public boolean hasMac() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMac() {
      java.lang.Object ref = mac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          mac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMacBytes() {
      java.lang.Object ref = mac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .WLANLocation location = 2;
    public static final int LOCATION_FIELD_NUMBER = 2;
    private com.apple.iphone.services.Location.WLANLocation location_;
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.apple.iphone.services.Location.WLANLocation getLocation() {
      return location_;
    }
    
    // optional int32 channel = 21;
    public static final int CHANNEL_FIELD_NUMBER = 21;
    private int channel_;
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getChannel() {
      return channel_;
    }
    
    private void initFields() {
      mac_ = "";
      location_ = com.apple.iphone.services.Location.WLANLocation.getDefaultInstance();
      channel_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMacBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, location_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(21, channel_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMacBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, location_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, channel_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.apple.iphone.services.Location.ResponseWLAN parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.apple.iphone.services.Location.ResponseWLAN parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.ResponseWLAN parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.apple.iphone.services.Location.ResponseWLAN parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.ResponseWLAN parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.apple.iphone.services.Location.ResponseWLAN parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.ResponseWLAN parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.apple.iphone.services.Location.ResponseWLAN parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.apple.iphone.services.Location.ResponseWLAN parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.apple.iphone.services.Location.ResponseWLAN parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.apple.iphone.services.Location.ResponseWLAN prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.apple.iphone.services.Location.ResponseWLAN, Builder>
        implements com.apple.iphone.services.Location.ResponseWLANOrBuilder {
      // Construct using com.apple.iphone.services.Location.ResponseWLAN.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        mac_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        location_ = com.apple.iphone.services.Location.WLANLocation.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.apple.iphone.services.Location.ResponseWLAN getDefaultInstanceForType() {
        return com.apple.iphone.services.Location.ResponseWLAN.getDefaultInstance();
      }
      
      public com.apple.iphone.services.Location.ResponseWLAN build() {
        com.apple.iphone.services.Location.ResponseWLAN result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.apple.iphone.services.Location.ResponseWLAN buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.apple.iphone.services.Location.ResponseWLAN result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.apple.iphone.services.Location.ResponseWLAN buildPartial() {
        com.apple.iphone.services.Location.ResponseWLAN result = new com.apple.iphone.services.Location.ResponseWLAN(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mac_ = mac_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.location_ = location_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.channel_ = channel_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(com.apple.iphone.services.Location.ResponseWLAN other) {
        if (other == com.apple.iphone.services.Location.ResponseWLAN.getDefaultInstance()) return this;
        if (other.hasMac()) {
          setMac(other.getMac());
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              mac_ = input.readBytes();
              break;
            }
            case 18: {
              com.apple.iphone.services.Location.WLANLocation.Builder subBuilder = com.apple.iphone.services.Location.WLANLocation.newBuilder();
              if (hasLocation()) {
                subBuilder.mergeFrom(getLocation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLocation(subBuilder.buildPartial());
              break;
            }
            case 168: {
              bitField0_ |= 0x00000004;
              channel_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string mac = 1;
      private java.lang.Object mac_ = "";
      public boolean hasMac() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMac() {
        java.lang.Object ref = mac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          mac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        mac_ = value;
        
        return this;
      }
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mac_ = getDefaultInstance().getMac();
        
        return this;
      }
      void setMac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        mac_ = value;
        
      }
      
      // optional .WLANLocation location = 2;
      private com.apple.iphone.services.Location.WLANLocation location_ = com.apple.iphone.services.Location.WLANLocation.getDefaultInstance();
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.apple.iphone.services.Location.WLANLocation getLocation() {
        return location_;
      }
      public Builder setLocation(com.apple.iphone.services.Location.WLANLocation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        location_ = value;
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setLocation(
          com.apple.iphone.services.Location.WLANLocation.Builder builderForValue) {
        location_ = builderForValue.build();
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeLocation(com.apple.iphone.services.Location.WLANLocation value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            location_ != com.apple.iphone.services.Location.WLANLocation.getDefaultInstance()) {
          location_ =
            com.apple.iphone.services.Location.WLANLocation.newBuilder(location_).mergeFrom(value).buildPartial();
        } else {
          location_ = value;
        }
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearLocation() {
        location_ = com.apple.iphone.services.Location.WLANLocation.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      // optional int32 channel = 21;
      private int channel_ ;
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getChannel() {
        return channel_;
      }
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000004;
        channel_ = value;
        
        return this;
      }
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channel_ = 0;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ResponseWLAN)
    }
    
    static {
      defaultInstance = new ResponseWLAN(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ResponseWLAN)
  }
  
  public interface RequestWLANOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional string mac = 1;
    boolean hasMac();
    String getMac();
  }
  public static final class RequestWLAN extends
      com.google.protobuf.GeneratedMessageLite
      implements RequestWLANOrBuilder {
    // Use RequestWLAN.newBuilder() to construct.
    private RequestWLAN(Builder builder) {
      super(builder);
    }
    private RequestWLAN(boolean noInit) {}
    
    private static final RequestWLAN defaultInstance;
    public static RequestWLAN getDefaultInstance() {
      return defaultInstance;
    }
    
    public RequestWLAN getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional string mac = 1;
    public static final int MAC_FIELD_NUMBER = 1;
    private java.lang.Object mac_;
    public boolean hasMac() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMac() {
      java.lang.Object ref = mac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          mac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMacBytes() {
      java.lang.Object ref = mac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      mac_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMacBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMacBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.apple.iphone.services.Location.RequestWLAN parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.apple.iphone.services.Location.RequestWLAN parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.RequestWLAN parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.apple.iphone.services.Location.RequestWLAN parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.RequestWLAN parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.apple.iphone.services.Location.RequestWLAN parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.RequestWLAN parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.apple.iphone.services.Location.RequestWLAN parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.apple.iphone.services.Location.RequestWLAN parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.apple.iphone.services.Location.RequestWLAN parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.apple.iphone.services.Location.RequestWLAN prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.apple.iphone.services.Location.RequestWLAN, Builder>
        implements com.apple.iphone.services.Location.RequestWLANOrBuilder {
      // Construct using com.apple.iphone.services.Location.RequestWLAN.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        mac_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.apple.iphone.services.Location.RequestWLAN getDefaultInstanceForType() {
        return com.apple.iphone.services.Location.RequestWLAN.getDefaultInstance();
      }
      
      public com.apple.iphone.services.Location.RequestWLAN build() {
        com.apple.iphone.services.Location.RequestWLAN result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.apple.iphone.services.Location.RequestWLAN buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.apple.iphone.services.Location.RequestWLAN result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.apple.iphone.services.Location.RequestWLAN buildPartial() {
        com.apple.iphone.services.Location.RequestWLAN result = new com.apple.iphone.services.Location.RequestWLAN(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mac_ = mac_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(com.apple.iphone.services.Location.RequestWLAN other) {
        if (other == com.apple.iphone.services.Location.RequestWLAN.getDefaultInstance()) return this;
        if (other.hasMac()) {
          setMac(other.getMac());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              mac_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string mac = 1;
      private java.lang.Object mac_ = "";
      public boolean hasMac() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMac() {
        java.lang.Object ref = mac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          mac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        mac_ = value;
        
        return this;
      }
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mac_ = getDefaultInstance().getMac();
        
        return this;
      }
      void setMac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        mac_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:RequestWLAN)
    }
    
    static {
      defaultInstance = new RequestWLAN(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RequestWLAN)
  }
  
  public interface RequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .RequestWLAN wlan = 2;
    java.util.List<com.apple.iphone.services.Location.RequestWLAN> 
        getWlanList();
    com.apple.iphone.services.Location.RequestWLAN getWlan(int index);
    int getWlanCount();
    
    // optional int32 unknown3 = 3;
    boolean hasUnknown3();
    int getUnknown3();
    
    // optional int32 unknown4 = 4;
    boolean hasUnknown4();
    int getUnknown4();
    
    // optional string source = 5;
    boolean hasSource();
    String getSource();
  }
  public static final class Request extends
      com.google.protobuf.GeneratedMessageLite
      implements RequestOrBuilder {
    // Use Request.newBuilder() to construct.
    private Request(Builder builder) {
      super(builder);
    }
    private Request(boolean noInit) {}
    
    private static final Request defaultInstance;
    public static Request getDefaultInstance() {
      return defaultInstance;
    }
    
    public Request getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // repeated .RequestWLAN wlan = 2;
    public static final int WLAN_FIELD_NUMBER = 2;
    private java.util.List<com.apple.iphone.services.Location.RequestWLAN> wlan_;
    public java.util.List<com.apple.iphone.services.Location.RequestWLAN> getWlanList() {
      return wlan_;
    }
    public java.util.List<? extends com.apple.iphone.services.Location.RequestWLANOrBuilder> 
        getWlanOrBuilderList() {
      return wlan_;
    }
    public int getWlanCount() {
      return wlan_.size();
    }
    public com.apple.iphone.services.Location.RequestWLAN getWlan(int index) {
      return wlan_.get(index);
    }
    public com.apple.iphone.services.Location.RequestWLANOrBuilder getWlanOrBuilder(
        int index) {
      return wlan_.get(index);
    }
    
    // optional int32 unknown3 = 3;
    public static final int UNKNOWN3_FIELD_NUMBER = 3;
    private int unknown3_;
    public boolean hasUnknown3() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getUnknown3() {
      return unknown3_;
    }
    
    // optional int32 unknown4 = 4;
    public static final int UNKNOWN4_FIELD_NUMBER = 4;
    private int unknown4_;
    public boolean hasUnknown4() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getUnknown4() {
      return unknown4_;
    }
    
    // optional string source = 5;
    public static final int SOURCE_FIELD_NUMBER = 5;
    private java.lang.Object source_;
    public boolean hasSource() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          source_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      wlan_ = java.util.Collections.emptyList();
      unknown3_ = 0;
      unknown4_ = 0;
      source_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < wlan_.size(); i++) {
        output.writeMessage(2, wlan_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(3, unknown3_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, unknown4_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(5, getSourceBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < wlan_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, wlan_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, unknown3_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, unknown4_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getSourceBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.apple.iphone.services.Location.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.apple.iphone.services.Location.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.apple.iphone.services.Location.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.apple.iphone.services.Location.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.apple.iphone.services.Location.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.apple.iphone.services.Location.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.apple.iphone.services.Location.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.apple.iphone.services.Location.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.apple.iphone.services.Location.Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.apple.iphone.services.Location.Request, Builder>
        implements com.apple.iphone.services.Location.RequestOrBuilder {
      // Construct using com.apple.iphone.services.Location.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        wlan_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        unknown3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        unknown4_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        source_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.apple.iphone.services.Location.Request getDefaultInstanceForType() {
        return com.apple.iphone.services.Location.Request.getDefaultInstance();
      }
      
      public com.apple.iphone.services.Location.Request build() {
        com.apple.iphone.services.Location.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.apple.iphone.services.Location.Request buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.apple.iphone.services.Location.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.apple.iphone.services.Location.Request buildPartial() {
        com.apple.iphone.services.Location.Request result = new com.apple.iphone.services.Location.Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          wlan_ = java.util.Collections.unmodifiableList(wlan_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.wlan_ = wlan_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unknown3_ = unknown3_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.unknown4_ = unknown4_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.source_ = source_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(com.apple.iphone.services.Location.Request other) {
        if (other == com.apple.iphone.services.Location.Request.getDefaultInstance()) return this;
        if (!other.wlan_.isEmpty()) {
          if (wlan_.isEmpty()) {
            wlan_ = other.wlan_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureWlanIsMutable();
            wlan_.addAll(other.wlan_);
          }
          
        }
        if (other.hasUnknown3()) {
          setUnknown3(other.getUnknown3());
        }
        if (other.hasUnknown4()) {
          setUnknown4(other.getUnknown4());
        }
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 18: {
              com.apple.iphone.services.Location.RequestWLAN.Builder subBuilder = com.apple.iphone.services.Location.RequestWLAN.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addWlan(subBuilder.buildPartial());
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              unknown3_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              unknown4_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000008;
              source_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .RequestWLAN wlan = 2;
      private java.util.List<com.apple.iphone.services.Location.RequestWLAN> wlan_ =
        java.util.Collections.emptyList();
      private void ensureWlanIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          wlan_ = new java.util.ArrayList<com.apple.iphone.services.Location.RequestWLAN>(wlan_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<com.apple.iphone.services.Location.RequestWLAN> getWlanList() {
        return java.util.Collections.unmodifiableList(wlan_);
      }
      public int getWlanCount() {
        return wlan_.size();
      }
      public com.apple.iphone.services.Location.RequestWLAN getWlan(int index) {
        return wlan_.get(index);
      }
      public Builder setWlan(
          int index, com.apple.iphone.services.Location.RequestWLAN value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWlanIsMutable();
        wlan_.set(index, value);
        
        return this;
      }
      public Builder setWlan(
          int index, com.apple.iphone.services.Location.RequestWLAN.Builder builderForValue) {
        ensureWlanIsMutable();
        wlan_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addWlan(com.apple.iphone.services.Location.RequestWLAN value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWlanIsMutable();
        wlan_.add(value);
        
        return this;
      }
      public Builder addWlan(
          int index, com.apple.iphone.services.Location.RequestWLAN value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWlanIsMutable();
        wlan_.add(index, value);
        
        return this;
      }
      public Builder addWlan(
          com.apple.iphone.services.Location.RequestWLAN.Builder builderForValue) {
        ensureWlanIsMutable();
        wlan_.add(builderForValue.build());
        
        return this;
      }
      public Builder addWlan(
          int index, com.apple.iphone.services.Location.RequestWLAN.Builder builderForValue) {
        ensureWlanIsMutable();
        wlan_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllWlan(
          java.lang.Iterable<? extends com.apple.iphone.services.Location.RequestWLAN> values) {
        ensureWlanIsMutable();
        super.addAll(values, wlan_);
        
        return this;
      }
      public Builder clearWlan() {
        wlan_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeWlan(int index) {
        ensureWlanIsMutable();
        wlan_.remove(index);
        
        return this;
      }
      
      // optional int32 unknown3 = 3;
      private int unknown3_ ;
      public boolean hasUnknown3() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getUnknown3() {
        return unknown3_;
      }
      public Builder setUnknown3(int value) {
        bitField0_ |= 0x00000002;
        unknown3_ = value;
        
        return this;
      }
      public Builder clearUnknown3() {
        bitField0_ = (bitField0_ & ~0x00000002);
        unknown3_ = 0;
        
        return this;
      }
      
      // optional int32 unknown4 = 4;
      private int unknown4_ ;
      public boolean hasUnknown4() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getUnknown4() {
        return unknown4_;
      }
      public Builder setUnknown4(int value) {
        bitField0_ |= 0x00000004;
        unknown4_ = value;
        
        return this;
      }
      public Builder clearUnknown4() {
        bitField0_ = (bitField0_ & ~0x00000004);
        unknown4_ = 0;
        
        return this;
      }
      
      // optional string source = 5;
      private java.lang.Object source_ = "";
      public boolean hasSource() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSource(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        source_ = value;
        
        return this;
      }
      public Builder clearSource() {
        bitField0_ = (bitField0_ & ~0x00000008);
        source_ = getDefaultInstance().getSource();
        
        return this;
      }
      void setSource(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        source_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:Request)
    }
    
    static {
      defaultInstance = new Request(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Request)
  }
  
  
  static {
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
